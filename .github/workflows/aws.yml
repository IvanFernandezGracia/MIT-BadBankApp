name: Deploy to Amazon ECS

on:
  push:
    branches:
      - main
env:
  AWS_REGION: us-east-1 # set this to your preferred AWS region, e.g. us-west-1
  EB_APP_NAME: MITBadBankLarge
  EB_ENV_NAME: MITBadBankLarge-env
jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: "true"
          token: ${{ secrets.PAT_TOKEN }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          echo ---Building and starting up docker---
          docker-compose -f docker-compose-tag.yml build
          docker-compose -f docker-compose-tag.yml push
          docker-compose -f docker-compose.yml build
          docker-compose -f docker-compose.yml push

      - name: Generate deployment package
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: zip -r deploy.zip * .[^.]*
        # run: zip -r deploy.zip * .[^.]* -x "**node_modules**"
#
      - name: Deploy to EB
        uses: einaregilsson/beanstalk-deploy@v16
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID_EB }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY_EB }}
          application_name: ${{ env.EB_APP_NAME }}
          environment_name: ${{ env.EB_ENV_NAME }}
          version_label: ${{ github.sha }}
          region: ${{ env.AWS_REGION }}
          deployment_package: deploy.zip